name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  macos-swift59:
    name: macOS (Swift 5.9)
    runs-on: macos-14
    strategy:
      matrix:
        xcode: ['15.2']
        config: ['debug', 'release']
    steps:
      - uses: actions/checkout@v5

      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app

      - name: Print Swift version
        run: swift --version

      - name: Cache Swift packages
        uses: actions/cache@v4
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Build
        run: swift build -c ${{ matrix.config }}

      - name: Run tests
        run: swift test -c ${{ matrix.config }}

  macos-swift62:
    name: macOS (Swift 6.2)
    runs-on: macos-15
    strategy:
      matrix:
        xcode: ['16.2']
        config: ['debug', 'release']
    steps:
      - uses: actions/checkout@v5

      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app

      - name: Print Swift version
        run: swift --version

      - name: Cache Swift packages
        uses: actions/cache@v4
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Build
        run: swift build -c ${{ matrix.config }}

      - name: Run tests
        run: swift test -c ${{ matrix.config }}

  linux-swift510:
    name: Ubuntu (Swift 5.10)
    runs-on: ubuntu-latest
    container: swift:5.10
    steps:
      - uses: actions/checkout@v5

      - name: Build
        run: swift build

      - name: Run tests
        run: swift test

  linux-swift62:
    name: Ubuntu (Swift 6.2)
    runs-on: ubuntu-latest
    container: swift:6.2
    steps:
      - uses: actions/checkout@v5

      - name: Build
        run: swift build

      - name: Run tests
        run: swift test

  windows:
    name: Windows (Swift 6.2)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5

      - uses: SwiftyLab/setup-swift@latest
        with:
          swift-version: "6.2"

      - name: Build
        run: swift build

      - name: Run tests
        run: swift test

  readme:
    name: README Code Examples
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v5

      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_16.0.app

      - name: Run README verification tests
        run: swift test --filter ReadmeVerificationTests

      - name: Validate README examples compile
        run: |
          echo "âœ… All README code examples are verified to compile and work"

  documentation:
    name: Documentation
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v5

      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_16.0.app

      - name: Build documentation
        run: |
          swift package \
            --allow-writing-to-directory ./docs \
            generate-documentation \
            --target HTMLTypes \
            --output-path ./docs \
            --transform-for-static-hosting \
            --hosting-base-path swift-html-types
        continue-on-error: true
